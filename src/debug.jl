function debug_callback(msg_severity, msg_type, callback_data_ptr, user_data_ptr)
  callback_data_ptr == C_NULL && return UInt32(0)
  callback_data = unsafe_load(callback_data_ptr)
  msg = unsafe_string(callback_data.pMessage)

  # ignore messages about available device extensions
  if !startswith(msg, "Device Extension: VK")
    id_name = unsafe_string(callback_data.pMessageIdName)
    # out of date as of 1.2.190
    id_name == "VUID-VkShaderModuleCreateInfo-pCode-04147" && contains(msg, "SPV_EXT_physical_storage_buffer") && return UInt32(0)

    msg_type = @match msg_type begin
      &Vk.DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT => "General"
      &Vk.DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT => "Validation"
      &Vk.DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT => "Performance"
      _ => error("Unknown message type $msg_type")
    end

    log = string("$msg_type ($id_name): $msg")

    # defer logging to avoid problems when the callback is run inside a finalizer
    @async @match msg_severity begin
      &Vk.DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT => @debug(log)
      &Vk.DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT => @info(log)
      &Vk.DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT => @warn(log)
      &Vk.DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT => @error(log)
      _ => error("Unknown message severity $msg_severity")
    end
  end
  UInt32(0)
end

struct Instruction
  name::Symbol
  args::Vector{Any}
  kwargs::Vector{NamedTuple}
end

function Base.show(io::IO, inst::Instruction)
  printstyled(io, inst.name; color = :cyan)
  print(io, '(', join(inst.args, ", "))
  if !isempty(inst.kwargs)
    print(io, "; ", join(inst.kwargs, ", "))
  end
  print(io, ')')
end

struct SnoopCommandBuffer <: CommandBuffer
  records::Vector{Instruction}
end

@forward SnoopCommandBuffer.records (Base.getindex, Base.isempty, Base.length, Base.iterate)

SnoopCommandBuffer() = SnoopCommandBuffer([])

function Base.show(io::IO, ::MIME"text/plain", snoop::SnoopCommandBuffer)
  println(io, "SnoopCommandBuffer($(length(snoop.records)) commands recorded):")
  for (i, record) in enumerate(snoop.records)
    printstyled(io, "\n  [$i] "; color = 140)
    printstyled(io, record.name; color = :cyan)
    print(io, '(')
    for (j, arg) in enumerate(record.args)
      printstyled(io, "::", typeof(arg), color = :light_black)
      j == lastindex(record.args) || print(io, ", ")
    end
    !isempty(record.kwargs) && print(io, "; ")
    for (j, kwarg) in enumerate(record.kwargs)
      printstyled(io, "::", typeof(kwarg), color = :light_black)
      j == lastindex(record.kwargs) || print(io, ", ")
    end
    print(io, ')')
  end
end

name(ex) = @match ex begin
  ::Symbol => ex
  :($x::$_) => x
end

macro snoopdef(ex)
  Meta.isexpr(ex, :(::)) || (ex = :($ex::Vk.Cvoid))
  (args, kwargs) = @match ex begin
    :($cmd(command_buffer, $(args...); $(kwargs...))::$_) => (args, kwargs)
    :($cmd(command_buffer, $(args...))::$_) => (args, [])
  end
  @match ex begin
    :($cmd(command_buffer, $(_...))::$rtype) || :($cmd(command_buffer, $(_...); $(_...))::$rtype) => begin
      (rtype_annotation, last_stmt) = @match rtype begin
        :(Vk.ResultTypes.Result{Result,VulkanError}) => (:(Result{Vk.Result,Vk.VulkanError}), :(Vk.SUCCESS))
        :(Vk.Cvoid) => (:Cvoid, :nothing)
      end
      push_ex = :(push!(snoop.records, Instruction($(QuoteNode(cmd)), collect([$(name.(args)...)]), collect(kwargs))))
      esc(:(Vk.$cmd(snoop::SnoopCommandBuffer, $(args...); kwargs...)::$rtype_annotation = ($push_ex; $last_stmt)))
    end
    _ => error("Malformed expression: $ex")
  end
end

@snoopdef begin_command_buffer(command_buffer, info::Vk.CommandBufferBeginInfo)::Vk.ResultTypes.Result{Result,VulkanError}
@snoopdef end_command_buffer(command_buffer)::Vk.ResultTypes.Result{Result,VulkanError}

#= To generate the following, navigate to Vulkan.jl/generated and do (for Linux):

cat linux.jl | \
  grep -P '^function cmd_.*?\).*?' |                                  # Match all `cmd_*` definitions.
  sed -E 's/function /@snoopdef /' |                                  # Replace `function` by `@snoopdef`.
  sed -r 's/::([a-zA-Z0-9]*?)/::Vk.\1/g' |                            # Prefix all type annotations with `Vk.`
  sed -r 's/NTuple\{(.*?), ([a-zA-Z0-9].*)\}/NTuple\{\1, Vk.\2\}/g' | # Prefix all `NTuple` element types.
  xclip -sel clip                                                     # Copy to system clipboard.

then replace everything below with the contents of the clipboard. =#

@snoopdef cmd_bind_pipeline(command_buffer, pipeline_bind_point::Vk.PipelineBindPoint, pipeline)
@snoopdef cmd_set_viewport(command_buffer, viewports::Vk.AbstractArray)
@snoopdef cmd_set_scissor(command_buffer, scissors::Vk.AbstractArray)
@snoopdef cmd_set_line_width(command_buffer, line_width::Vk.Real)
@snoopdef cmd_set_depth_bias(command_buffer, depth_bias_constant_factor::Vk.Real, depth_bias_clamp::Vk.Real, depth_bias_slope_factor::Vk.Real)
@snoopdef cmd_set_blend_constants(command_buffer, blend_constants::Vk.NTuple{4, Vk.Float32})
@snoopdef cmd_set_depth_bounds(command_buffer, min_depth_bounds::Vk.Real, max_depth_bounds::Vk.Real)
@snoopdef cmd_set_stencil_compare_mask(command_buffer, face_mask::Vk.StencilFaceFlag, compare_mask::Vk.Integer)
@snoopdef cmd_set_stencil_write_mask(command_buffer, face_mask::Vk.StencilFaceFlag, write_mask::Vk.Integer)
@snoopdef cmd_set_stencil_reference(command_buffer, face_mask::Vk.StencilFaceFlag, reference::Vk.Integer)
@snoopdef cmd_bind_descriptor_sets(command_buffer, pipeline_bind_point::Vk.PipelineBindPoint, layout, first_set::Vk.Integer, descriptor_sets::Vk.AbstractArray, dynamic_offsets::Vk.AbstractArray)
@snoopdef cmd_bind_index_buffer(command_buffer, buffer, offset::Vk.Integer, index_type::Vk.IndexType)
@snoopdef cmd_bind_vertex_buffers(command_buffer, buffers::Vk.AbstractArray, offsets::Vk.AbstractArray)
@snoopdef cmd_draw(command_buffer, vertex_count::Vk.Integer, instance_count::Vk.Integer, first_vertex::Vk.Integer, first_instance::Vk.Integer)
@snoopdef cmd_draw_indexed(command_buffer, index_count::Vk.Integer, instance_count::Vk.Integer, first_index::Vk.Integer, vertex_offset::Vk.Integer, first_instance::Vk.Integer)
@snoopdef cmd_draw_multi_ext(command_buffer, vertex_info::Vk.AbstractArray, instance_count::Vk.Integer, first_instance::Vk.Integer, stride::Vk.Integer)
@snoopdef cmd_draw_multi_indexed_ext(command_buffer, index_info::Vk.AbstractArray, instance_count::Vk.Integer, first_instance::Vk.Integer, stride::Vk.Integer; vertex_offset = C_NULL)
@snoopdef cmd_draw_indirect(command_buffer, buffer, offset::Vk.Integer, draw_count::Vk.Integer, stride::Vk.Integer)
@snoopdef cmd_draw_indexed_indirect(command_buffer, buffer, offset::Vk.Integer, draw_count::Vk.Integer, stride::Vk.Integer)
@snoopdef cmd_dispatch(command_buffer, group_count_x::Vk.Integer, group_count_y::Vk.Integer, group_count_z::Vk.Integer)
@snoopdef cmd_dispatch_indirect(command_buffer, buffer, offset::Vk.Integer)
@snoopdef cmd_subpass_shading_huawei(command_buffer)
@snoopdef cmd_copy_buffer(command_buffer, src_buffer, dst_buffer, regions::Vk.AbstractArray)
@snoopdef cmd_copy_image(command_buffer, src_image, src_image_layout::Vk.ImageLayout, dst_image, dst_image_layout::Vk.ImageLayout, regions::Vk.AbstractArray)
@snoopdef cmd_blit_image(command_buffer, src_image, src_image_layout::Vk.ImageLayout, dst_image, dst_image_layout::Vk.ImageLayout, regions::Vk.AbstractArray, filter::Vk.Filter)
@snoopdef cmd_copy_buffer_to_image(command_buffer, src_buffer, dst_image, dst_image_layout::Vk.ImageLayout, regions::Vk.AbstractArray)
@snoopdef cmd_copy_image_to_buffer(command_buffer, src_image, src_image_layout::Vk.ImageLayout, dst_buffer, regions::Vk.AbstractArray)
@snoopdef cmd_update_buffer(command_buffer, dst_buffer, dst_offset::Vk.Integer, data_size::Vk.Integer, data::Vk.Ptr{Cvoid})
@snoopdef cmd_fill_buffer(command_buffer, dst_buffer, dst_offset::Vk.Integer, size::Vk.Integer, data::Vk.Integer)
@snoopdef cmd_clear_color_image(command_buffer, image, image_layout::Vk.ImageLayout, color::Vk.ClearColorValue, ranges::Vk.AbstractArray)
@snoopdef cmd_clear_depth_stencil_image(command_buffer, image, image_layout::Vk.ImageLayout, depth_stencil::Vk.ClearDepthStencilValue, ranges::Vk.AbstractArray)
@snoopdef cmd_clear_attachments(command_buffer, attachments::Vk.AbstractArray, rects::Vk.AbstractArray)
@snoopdef cmd_resolve_image(command_buffer, src_image, src_image_layout::Vk.ImageLayout, dst_image, dst_image_layout::Vk.ImageLayout, regions::Vk.AbstractArray)
@snoopdef cmd_set_event(command_buffer, event; stage_mask = 0)
@snoopdef cmd_reset_event(command_buffer, event; stage_mask = 0)
@snoopdef cmd_wait_events(command_buffer, events::Vk.AbstractArray, memory_barriers::Vk.AbstractArray, buffer_memory_barriers::Vk.AbstractArray, image_memory_barriers::Vk.AbstractArray; src_stage_mask = 0, dst_stage_mask = 0)
@snoopdef cmd_pipeline_barrier(command_buffer, memory_barriers::Vk.AbstractArray, buffer_memory_barriers::Vk.AbstractArray, image_memory_barriers::Vk.AbstractArray; src_stage_mask = 0, dst_stage_mask = 0, dependency_flags = 0)
@snoopdef cmd_begin_query(command_buffer, query_pool, query::Vk.Integer; flags = 0)
@snoopdef cmd_end_query(command_buffer, query_pool, query::Vk.Integer)
@snoopdef cmd_begin_conditional_rendering_ext(command_buffer, conditional_rendering_begin::Vk.ConditionalRenderingBeginInfoEXT)
@snoopdef cmd_end_conditional_rendering_ext(command_buffer)
@snoopdef cmd_reset_query_pool(command_buffer, query_pool, first_query::Vk.Integer, query_count::Vk.Integer)
@snoopdef cmd_write_timestamp(command_buffer, pipeline_stage::Vk.PipelineStageFlag, query_pool, query::Vk.Integer)
@snoopdef cmd_copy_query_pool_results(command_buffer, query_pool, first_query::Vk.Integer, query_count::Vk.Integer, dst_buffer, dst_offset::Vk.Integer, stride::Vk.Integer; flags = 0)
@snoopdef cmd_push_constants(command_buffer, layout, stage_flags::Vk.ShaderStageFlag, offset::Vk.Integer, size::Vk.Integer, values::Vk.Ptr{Cvoid})
@snoopdef cmd_begin_render_pass(command_buffer, render_pass_begin::Vk.RenderPassBeginInfo, contents::Vk.SubpassContents)
@snoopdef cmd_next_subpass(command_buffer, contents::Vk.SubpassContents)
@snoopdef cmd_end_render_pass(command_buffer)
@snoopdef cmd_execute_commands(command_buffer, command_buffers::Vk.AbstractArray)
@snoopdef cmd_debug_marker_begin_ext(command_buffer, marker_info::Vk.DebugMarkerMarkerInfoEXT)
@snoopdef cmd_debug_marker_end_ext(command_buffer)
@snoopdef cmd_debug_marker_insert_ext(command_buffer, marker_info::Vk.DebugMarkerMarkerInfoEXT)
@snoopdef cmd_execute_generated_commands_nv(command_buffer, is_preprocessed::Vk.Bool, generated_commands_info::Vk.GeneratedCommandsInfoNV)
@snoopdef cmd_preprocess_generated_commands_nv(command_buffer, generated_commands_info::Vk.GeneratedCommandsInfoNV)
@snoopdef cmd_bind_pipeline_shader_group_nv(command_buffer, pipeline_bind_point::Vk.PipelineBindPoint, pipeline, group_index::Vk.Integer)
@snoopdef cmd_push_descriptor_set_khr(command_buffer, pipeline_bind_point::Vk.PipelineBindPoint, layout, set::Vk.Integer, descriptor_writes::Vk.AbstractArray)
@snoopdef cmd_set_device_mask(command_buffer, device_mask::Vk.Integer)
@snoopdef cmd_dispatch_base(command_buffer, base_group_x::Vk.Integer, base_group_y::Vk.Integer, base_group_z::Vk.Integer, group_count_x::Vk.Integer, group_count_y::Vk.Integer, group_count_z::Vk.Integer)
@snoopdef cmd_push_descriptor_set_with_template_khr(command_buffer, descriptor_update_template, layout, set::Vk.Integer, data::Vk.Ptr{Cvoid})
@snoopdef cmd_set_viewport_w_scaling_nv(command_buffer, viewport_w_scalings::Vk.AbstractArray)
@snoopdef cmd_set_discard_rectangle_ext(command_buffer, discard_rectangles::Vk.AbstractArray)
@snoopdef cmd_set_sample_locations_ext(command_buffer, sample_locations_info::Vk.SampleLocationsInfoEXT)
@snoopdef cmd_begin_debug_utils_label_ext(command_buffer, label_info::Vk.DebugUtilsLabelEXT)
@snoopdef cmd_end_debug_utils_label_ext(command_buffer)
@snoopdef cmd_insert_debug_utils_label_ext(command_buffer, label_info::Vk.DebugUtilsLabelEXT)
@snoopdef cmd_write_buffer_marker_amd(command_buffer, dst_buffer, dst_offset::Vk.Integer, marker::Vk.Integer; pipeline_stage = 0)
@snoopdef cmd_begin_render_pass_2(command_buffer, render_pass_begin::Vk.RenderPassBeginInfo, subpass_begin_info::Vk.SubpassBeginInfo)
@snoopdef cmd_next_subpass_2(command_buffer, subpass_begin_info::Vk.SubpassBeginInfo, subpass_end_info::Vk.SubpassEndInfo)
@snoopdef cmd_end_render_pass_2(command_buffer, subpass_end_info::Vk.SubpassEndInfo)
@snoopdef cmd_draw_indirect_count(command_buffer, buffer, offset::Vk.Integer, count_buffer, count_buffer_offset::Vk.Integer, max_draw_count::Vk.Integer, stride::Vk.Integer)
@snoopdef cmd_draw_indexed_indirect_count(command_buffer, buffer, offset::Vk.Integer, count_buffer, count_buffer_offset::Vk.Integer, max_draw_count::Vk.Integer, stride::Vk.Integer)
@snoopdef cmd_set_checkpoint_nv(command_buffer, checkpoint_marker::Vk.Ptr{Cvoid})
@snoopdef cmd_bind_transform_feedback_buffers_ext(command_buffer, buffers::Vk.AbstractArray, offsets::Vk.AbstractArray; sizes = C_NULL)
@snoopdef cmd_begin_transform_feedback_ext(command_buffer, counter_buffers::Vk.AbstractArray; counter_buffer_offsets = C_NULL)
@snoopdef cmd_end_transform_feedback_ext(command_buffer, counter_buffers::Vk.AbstractArray; counter_buffer_offsets = C_NULL)
@snoopdef cmd_begin_query_indexed_ext(command_buffer, query_pool, query::Vk.Integer, index::Vk.Integer; flags = 0)
@snoopdef cmd_end_query_indexed_ext(command_buffer, query_pool, query::Vk.Integer, index::Vk.Integer)
@snoopdef cmd_draw_indirect_byte_count_ext(command_buffer, instance_count::Vk.Integer, first_instance::Vk.Integer, counter_buffer, counter_buffer_offset::Vk.Integer, counter_offset::Vk.Integer, vertex_stride::Vk.Integer)
@snoopdef cmd_set_exclusive_scissor_nv(command_buffer, exclusive_scissors::Vk.AbstractArray)
@snoopdef cmd_bind_shading_rate_image_nv(command_buffer, image_layout::Vk.ImageLayout; image_view = C_NULL)
@snoopdef cmd_set_viewport_shading_rate_palette_nv(command_buffer, shading_rate_palettes::Vk.AbstractArray)
@snoopdef cmd_set_coarse_sample_order_nv(command_buffer, sample_order_type::Vk.CoarseSampleOrderTypeNV, custom_sample_orders::Vk.AbstractArray)
@snoopdef cmd_draw_mesh_tasks_nv(command_buffer, task_count::Vk.Integer, first_task::Vk.Integer)
@snoopdef cmd_draw_mesh_tasks_indirect_nv(command_buffer, buffer, offset::Vk.Integer, draw_count::Vk.Integer, stride::Vk.Integer)
@snoopdef cmd_draw_mesh_tasks_indirect_count_nv(command_buffer, buffer, offset::Vk.Integer, count_buffer, count_buffer_offset::Vk.Integer, max_draw_count::Vk.Integer, stride::Vk.Integer)
@snoopdef cmd_bind_invocation_mask_huawei(command_buffer, image_layout::Vk.ImageLayout; image_view = C_NULL)
@snoopdef cmd_copy_acceleration_structure_nv(command_buffer, dst, src, mode::Vk.CopyAccelerationStructureModeKHR)
@snoopdef cmd_copy_acceleration_structure_khr(command_buffer, info::Vk.CopyAccelerationStructureInfoKHR)
@snoopdef cmd_copy_acceleration_structure_to_memory_khr(command_buffer, info::Vk.CopyAccelerationStructureToMemoryInfoKHR)
@snoopdef cmd_copy_memory_to_acceleration_structure_khr(command_buffer, info::Vk.CopyMemoryToAccelerationStructureInfoKHR)
@snoopdef cmd_write_acceleration_structures_properties_khr(command_buffer, acceleration_structures::Vk.AbstractArray, query_type::Vk.QueryType, query_pool, first_query::Vk.Integer)
@snoopdef cmd_write_acceleration_structures_properties_nv(command_buffer, acceleration_structures::Vk.AbstractArray, query_type::Vk.QueryType, query_pool, first_query::Vk.Integer)
@snoopdef cmd_build_acceleration_structure_nv(command_buffer, info::Vk.AccelerationStructureInfoNV, instance_offset::Vk.Integer, update::Vk.Bool, dst, scratch, scratch_offset::Vk.Integer; instance_data = C_NULL, src = C_NULL)
@snoopdef cmd_trace_rays_khr(command_buffer, raygen_shader_binding_table::Vk.StridedDeviceAddressRegionKHR, miss_shader_binding_table::Vk.StridedDeviceAddressRegionKHR, hit_shader_binding_table::Vk.StridedDeviceAddressRegionKHR, callable_shader_binding_table::Vk.StridedDeviceAddressRegionKHR, width::Vk.Integer, height::Vk.Integer, depth::Vk.Integer)
@snoopdef cmd_trace_rays_nv(command_buffer, raygen_shader_binding_table_buffer, raygen_shader_binding_offset::Vk.Integer, miss_shader_binding_offset::Vk.Integer, miss_shader_binding_stride::Vk.Integer, hit_shader_binding_offset::Vk.Integer, hit_shader_binding_stride::Vk.Integer, callable_shader_binding_offset::Vk.Integer, callable_shader_binding_stride::Vk.Integer, width::Vk.Integer, height::Vk.Integer, depth::Vk.Integer; miss_shader_binding_table_buffer = C_NULL, hit_shader_binding_table_buffer = C_NULL, callable_shader_binding_table_buffer = C_NULL)
@snoopdef cmd_trace_rays_indirect_khr(command_buffer, raygen_shader_binding_table::Vk.StridedDeviceAddressRegionKHR, miss_shader_binding_table::Vk.StridedDeviceAddressRegionKHR, hit_shader_binding_table::Vk.StridedDeviceAddressRegionKHR, callable_shader_binding_table::Vk.StridedDeviceAddressRegionKHR, indirect_device_address::Vk.Integer)
@snoopdef cmd_set_ray_tracing_pipeline_stack_size_khr(command_buffer, pipeline_stack_size::Vk.Integer)
@snoopdef cmd_set_performance_marker_intel(command_buffer, marker_info::Vk.PerformanceMarkerInfoINTEL)::Vk.ResultTypes.Result{Result, VulkanError}
@snoopdef cmd_set_performance_stream_marker_intel(command_buffer, marker_info::Vk.PerformanceStreamMarkerInfoINTEL)::Vk.ResultTypes.Result{Result, VulkanError}
@snoopdef cmd_set_performance_override_intel(command_buffer, override_info::Vk.PerformanceOverrideInfoINTEL)::Vk.ResultTypes.Result{Result, VulkanError}
@snoopdef cmd_set_line_stipple_ext(command_buffer, line_stipple_factor::Vk.Integer, line_stipple_pattern::Vk.Integer)
@snoopdef cmd_build_acceleration_structures_khr(command_buffer, infos::Vk.AbstractArray, build_range_infos::Vk.AbstractArray)
@snoopdef cmd_build_acceleration_structures_indirect_khr(command_buffer, infos::Vk.AbstractArray, indirect_device_addresses::Vk.AbstractArray, indirect_strides::Vk.AbstractArray, max_primitive_counts::Vk.AbstractArray)
@snoopdef cmd_set_cull_mode(command_buffer; cull_mode = 0)
@snoopdef cmd_set_front_face(command_buffer, front_face::Vk.FrontFace)
@snoopdef cmd_set_primitive_topology(command_buffer, primitive_topology::Vk.PrimitiveTopology)
@snoopdef cmd_set_viewport_with_count(command_buffer, viewports::Vk.AbstractArray)
@snoopdef cmd_set_scissor_with_count(command_buffer, scissors::Vk.AbstractArray)
@snoopdef cmd_bind_vertex_buffers_2(command_buffer, buffers::Vk.AbstractArray, offsets::Vk.AbstractArray; sizes = C_NULL, strides = C_NULL)
@snoopdef cmd_set_depth_test_enable(command_buffer, depth_test_enable::Vk.Bool)
@snoopdef cmd_set_depth_write_enable(command_buffer, depth_write_enable::Vk.Bool)
@snoopdef cmd_set_depth_compare_op(command_buffer, depth_compare_op::Vk.CompareOp)
@snoopdef cmd_set_depth_bounds_test_enable(command_buffer, depth_bounds_test_enable::Vk.Bool)
@snoopdef cmd_set_stencil_test_enable(command_buffer, stencil_test_enable::Vk.Bool)
@snoopdef cmd_set_stencil_op(command_buffer, face_mask::Vk.StencilFaceFlag, fail_op::Vk.StencilOp, pass_op::Vk.StencilOp, depth_fail_op::Vk.StencilOp, compare_op::Vk.CompareOp)
@snoopdef cmd_set_patch_control_points_ext(command_buffer, patch_control_points::Vk.Integer)
@snoopdef cmd_set_rasterizer_discard_enable(command_buffer, rasterizer_discard_enable::Vk.Bool)
@snoopdef cmd_set_depth_bias_enable(command_buffer, depth_bias_enable::Vk.Bool)
@snoopdef cmd_set_logic_op_ext(command_buffer, logic_op::Vk.LogicOp)
@snoopdef cmd_set_primitive_restart_enable(command_buffer, primitive_restart_enable::Vk.Bool)
@snoopdef cmd_copy_buffer_2(command_buffer, copy_buffer_info::Vk.CopyBufferInfo2)
@snoopdef cmd_copy_image_2(command_buffer, copy_image_info::Vk.CopyImageInfo2)
@snoopdef cmd_blit_image_2(command_buffer, blit_image_info::Vk.BlitImageInfo2)
@snoopdef cmd_copy_buffer_to_image_2(command_buffer, copy_buffer_to_image_info::Vk.CopyBufferToImageInfo2)
@snoopdef cmd_copy_image_to_buffer_2(command_buffer, copy_image_to_buffer_info::Vk.CopyImageToBufferInfo2)
@snoopdef cmd_resolve_image_2(command_buffer, resolve_image_info::Vk.ResolveImageInfo2)
@snoopdef cmd_set_fragment_shading_rate_khr(command_buffer, fragment_size::Vk.Extent2D, combiner_ops::Vk.NTuple{2, Vk.FragmentShadingRateCombinerOpKHR})
@snoopdef cmd_set_fragment_shading_rate_enum_nv(command_buffer, shading_rate::Vk.FragmentShadingRateNV, combiner_ops::Vk.NTuple{2, Vk.FragmentShadingRateCombinerOpKHR})
@snoopdef cmd_set_vertex_input_ext(command_buffer, vertex_binding_descriptions::Vk.AbstractArray, vertex_attribute_descriptions::Vk.AbstractArray)
@snoopdef cmd_set_color_write_enable_ext(command_buffer, color_write_enables::Vk.AbstractArray)
@snoopdef cmd_set_event_2(command_buffer, event, dependency_info::Vk.DependencyInfo)
@snoopdef cmd_reset_event_2(command_buffer, event; stage_mask = 0)
@snoopdef cmd_wait_events_2(command_buffer, events::Vk.AbstractArray, dependency_infos::Vk.AbstractArray)
@snoopdef cmd_pipeline_barrier_2(command_buffer, dependency_info::Vk.DependencyInfo)
@snoopdef cmd_write_timestamp_2(command_buffer, query_pool, query::Vk.Integer; stage = 0)
@snoopdef cmd_write_buffer_marker_2_amd(command_buffer, dst_buffer, dst_offset::Vk.Integer, marker::Vk.Integer; stage = 0)
@snoopdef cmd_cu_launch_kernel_nvx(command_buffer, launch_info::Vk.CuLaunchInfoNVX)
@snoopdef cmd_begin_rendering(command_buffer, rendering_info::Vk.RenderingInfo)
@snoopdef cmd_end_rendering(command_buffer)
@snoopdef cmd_bind_pipeline(command_buffer, pipeline_bind_point::Vk.PipelineBindPoint, pipeline, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_viewport(command_buffer, viewports::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_scissor(command_buffer, scissors::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_line_width(command_buffer, line_width::Vk.Real, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_depth_bias(command_buffer, depth_bias_constant_factor::Vk.Real, depth_bias_clamp::Vk.Real, depth_bias_slope_factor::Vk.Real, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_blend_constants(command_buffer, blend_constants::Vk.NTuple{4, Vk.Float32}, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_depth_bounds(command_buffer, min_depth_bounds::Vk.Real, max_depth_bounds::Vk.Real, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_stencil_compare_mask(command_buffer, face_mask::Vk.StencilFaceFlag, compare_mask::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_stencil_write_mask(command_buffer, face_mask::Vk.StencilFaceFlag, write_mask::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_stencil_reference(command_buffer, face_mask::Vk.StencilFaceFlag, reference::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_bind_descriptor_sets(command_buffer, pipeline_bind_point::Vk.PipelineBindPoint, layout, first_set::Vk.Integer, descriptor_sets::Vk.AbstractArray, dynamic_offsets::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_bind_index_buffer(command_buffer, buffer, offset::Vk.Integer, index_type::Vk.IndexType, fptr::Vk.FunctionPtr)
@snoopdef cmd_bind_vertex_buffers(command_buffer, buffers::Vk.AbstractArray, offsets::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_draw(command_buffer, vertex_count::Vk.Integer, instance_count::Vk.Integer, first_vertex::Vk.Integer, first_instance::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_draw_indexed(command_buffer, index_count::Vk.Integer, instance_count::Vk.Integer, first_index::Vk.Integer, vertex_offset::Vk.Integer, first_instance::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_draw_multi_ext(command_buffer, vertex_info::Vk.AbstractArray, instance_count::Vk.Integer, first_instance::Vk.Integer, stride::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_draw_multi_indexed_ext(command_buffer, index_info::Vk.AbstractArray, instance_count::Vk.Integer, first_instance::Vk.Integer, stride::Vk.Integer, fptr::Vk.FunctionPtr; vertex_offset = C_NULL)
@snoopdef cmd_draw_indirect(command_buffer, buffer, offset::Vk.Integer, draw_count::Vk.Integer, stride::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_draw_indexed_indirect(command_buffer, buffer, offset::Vk.Integer, draw_count::Vk.Integer, stride::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_dispatch(command_buffer, group_count_x::Vk.Integer, group_count_y::Vk.Integer, group_count_z::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_dispatch_indirect(command_buffer, buffer, offset::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_subpass_shading_huawei(command_buffer, fptr::Vk.FunctionPtr)
@snoopdef cmd_copy_buffer(command_buffer, src_buffer, dst_buffer, regions::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_copy_image(command_buffer, src_image, src_image_layout::Vk.ImageLayout, dst_image, dst_image_layout::Vk.ImageLayout, regions::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_blit_image(command_buffer, src_image, src_image_layout::Vk.ImageLayout, dst_image, dst_image_layout::Vk.ImageLayout, regions::Vk.AbstractArray, filter::Vk.Filter, fptr::Vk.FunctionPtr)
@snoopdef cmd_copy_buffer_to_image(command_buffer, src_buffer, dst_image, dst_image_layout::Vk.ImageLayout, regions::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_copy_image_to_buffer(command_buffer, src_image, src_image_layout::Vk.ImageLayout, dst_buffer, regions::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_update_buffer(command_buffer, dst_buffer, dst_offset::Vk.Integer, data_size::Vk.Integer, data::Vk.Ptr{Cvoid}, fptr::Vk.FunctionPtr)
@snoopdef cmd_fill_buffer(command_buffer, dst_buffer, dst_offset::Vk.Integer, size::Vk.Integer, data::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_clear_color_image(command_buffer, image, image_layout::Vk.ImageLayout, color::Vk.ClearColorValue, ranges::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_clear_depth_stencil_image(command_buffer, image, image_layout::Vk.ImageLayout, depth_stencil::Vk.ClearDepthStencilValue, ranges::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_clear_attachments(command_buffer, attachments::Vk.AbstractArray, rects::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_resolve_image(command_buffer, src_image, src_image_layout::Vk.ImageLayout, dst_image, dst_image_layout::Vk.ImageLayout, regions::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_event(command_buffer, event, fptr::Vk.FunctionPtr; stage_mask = 0)
@snoopdef cmd_reset_event(command_buffer, event, fptr::Vk.FunctionPtr; stage_mask = 0)
@snoopdef cmd_wait_events(command_buffer, events::Vk.AbstractArray, memory_barriers::Vk.AbstractArray, buffer_memory_barriers::Vk.AbstractArray, image_memory_barriers::Vk.AbstractArray, fptr::Vk.FunctionPtr; src_stage_mask = 0, dst_stage_mask = 0)
@snoopdef cmd_pipeline_barrier(command_buffer, memory_barriers::Vk.AbstractArray, buffer_memory_barriers::Vk.AbstractArray, image_memory_barriers::Vk.AbstractArray, fptr::Vk.FunctionPtr; src_stage_mask = 0, dst_stage_mask = 0, dependency_flags = 0)
@snoopdef cmd_begin_query(command_buffer, query_pool, query::Vk.Integer, fptr::Vk.FunctionPtr; flags = 0)
@snoopdef cmd_end_query(command_buffer, query_pool, query::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_begin_conditional_rendering_ext(command_buffer, conditional_rendering_begin::Vk.ConditionalRenderingBeginInfoEXT, fptr::Vk.FunctionPtr)
@snoopdef cmd_end_conditional_rendering_ext(command_buffer, fptr::Vk.FunctionPtr)
@snoopdef cmd_reset_query_pool(command_buffer, query_pool, first_query::Vk.Integer, query_count::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_write_timestamp(command_buffer, pipeline_stage::Vk.PipelineStageFlag, query_pool, query::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_copy_query_pool_results(command_buffer, query_pool, first_query::Vk.Integer, query_count::Vk.Integer, dst_buffer, dst_offset::Vk.Integer, stride::Vk.Integer, fptr::Vk.FunctionPtr; flags = 0)
@snoopdef cmd_push_constants(command_buffer, layout, stage_flags::Vk.ShaderStageFlag, offset::Vk.Integer, size::Vk.Integer, values::Vk.Ptr{Cvoid}, fptr::Vk.FunctionPtr)
@snoopdef cmd_begin_render_pass(command_buffer, render_pass_begin::Vk.RenderPassBeginInfo, contents::Vk.SubpassContents, fptr::Vk.FunctionPtr)
@snoopdef cmd_next_subpass(command_buffer, contents::Vk.SubpassContents, fptr::Vk.FunctionPtr)
@snoopdef cmd_end_render_pass(command_buffer, fptr::Vk.FunctionPtr)
@snoopdef cmd_execute_commands(command_buffer, command_buffers::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_debug_marker_begin_ext(command_buffer, marker_info::Vk.DebugMarkerMarkerInfoEXT, fptr::Vk.FunctionPtr)
@snoopdef cmd_debug_marker_end_ext(command_buffer, fptr::Vk.FunctionPtr)
@snoopdef cmd_debug_marker_insert_ext(command_buffer, marker_info::Vk.DebugMarkerMarkerInfoEXT, fptr::Vk.FunctionPtr)
@snoopdef cmd_execute_generated_commands_nv(command_buffer, is_preprocessed::Vk.Bool, generated_commands_info::Vk.GeneratedCommandsInfoNV, fptr::Vk.FunctionPtr)
@snoopdef cmd_preprocess_generated_commands_nv(command_buffer, generated_commands_info::Vk.GeneratedCommandsInfoNV, fptr::Vk.FunctionPtr)
@snoopdef cmd_bind_pipeline_shader_group_nv(command_buffer, pipeline_bind_point::Vk.PipelineBindPoint, pipeline, group_index::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_push_descriptor_set_khr(command_buffer, pipeline_bind_point::Vk.PipelineBindPoint, layout, set::Vk.Integer, descriptor_writes::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_device_mask(command_buffer, device_mask::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_dispatch_base(command_buffer, base_group_x::Vk.Integer, base_group_y::Vk.Integer, base_group_z::Vk.Integer, group_count_x::Vk.Integer, group_count_y::Vk.Integer, group_count_z::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_push_descriptor_set_with_template_khr(command_buffer, descriptor_update_template, layout, set::Vk.Integer, data::Vk.Ptr{Cvoid}, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_viewport_w_scaling_nv(command_buffer, viewport_w_scalings::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_discard_rectangle_ext(command_buffer, discard_rectangles::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_sample_locations_ext(command_buffer, sample_locations_info::Vk.SampleLocationsInfoEXT, fptr::Vk.FunctionPtr)
@snoopdef cmd_begin_debug_utils_label_ext(command_buffer, label_info::Vk.DebugUtilsLabelEXT, fptr::Vk.FunctionPtr)
@snoopdef cmd_end_debug_utils_label_ext(command_buffer, fptr::Vk.FunctionPtr)
@snoopdef cmd_insert_debug_utils_label_ext(command_buffer, label_info::Vk.DebugUtilsLabelEXT, fptr::Vk.FunctionPtr)
@snoopdef cmd_write_buffer_marker_amd(command_buffer, dst_buffer, dst_offset::Vk.Integer, marker::Vk.Integer, fptr::Vk.FunctionPtr; pipeline_stage = 0)
@snoopdef cmd_begin_render_pass_2(command_buffer, render_pass_begin::Vk.RenderPassBeginInfo, subpass_begin_info::Vk.SubpassBeginInfo, fptr::Vk.FunctionPtr)
@snoopdef cmd_next_subpass_2(command_buffer, subpass_begin_info::Vk.SubpassBeginInfo, subpass_end_info::Vk.SubpassEndInfo, fptr::Vk.FunctionPtr)
@snoopdef cmd_end_render_pass_2(command_buffer, subpass_end_info::Vk.SubpassEndInfo, fptr::Vk.FunctionPtr)
@snoopdef cmd_draw_indirect_count(command_buffer, buffer, offset::Vk.Integer, count_buffer, count_buffer_offset::Vk.Integer, max_draw_count::Vk.Integer, stride::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_draw_indexed_indirect_count(command_buffer, buffer, offset::Vk.Integer, count_buffer, count_buffer_offset::Vk.Integer, max_draw_count::Vk.Integer, stride::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_checkpoint_nv(command_buffer, checkpoint_marker::Vk.Ptr{Cvoid}, fptr::Vk.FunctionPtr)
@snoopdef cmd_bind_transform_feedback_buffers_ext(command_buffer, buffers::Vk.AbstractArray, offsets::Vk.AbstractArray, fptr::Vk.FunctionPtr; sizes = C_NULL)
@snoopdef cmd_begin_transform_feedback_ext(command_buffer, counter_buffers::Vk.AbstractArray, fptr::Vk.FunctionPtr; counter_buffer_offsets = C_NULL)
@snoopdef cmd_end_transform_feedback_ext(command_buffer, counter_buffers::Vk.AbstractArray, fptr::Vk.FunctionPtr; counter_buffer_offsets = C_NULL)
@snoopdef cmd_begin_query_indexed_ext(command_buffer, query_pool, query::Vk.Integer, index::Vk.Integer, fptr::Vk.FunctionPtr; flags = 0)
@snoopdef cmd_end_query_indexed_ext(command_buffer, query_pool, query::Vk.Integer, index::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_draw_indirect_byte_count_ext(command_buffer, instance_count::Vk.Integer, first_instance::Vk.Integer, counter_buffer, counter_buffer_offset::Vk.Integer, counter_offset::Vk.Integer, vertex_stride::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_exclusive_scissor_nv(command_buffer, exclusive_scissors::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_bind_shading_rate_image_nv(command_buffer, image_layout::Vk.ImageLayout, fptr::Vk.FunctionPtr; image_view = C_NULL)
@snoopdef cmd_set_viewport_shading_rate_palette_nv(command_buffer, shading_rate_palettes::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_coarse_sample_order_nv(command_buffer, sample_order_type::Vk.CoarseSampleOrderTypeNV, custom_sample_orders::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_draw_mesh_tasks_nv(command_buffer, task_count::Vk.Integer, first_task::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_draw_mesh_tasks_indirect_nv(command_buffer, buffer, offset::Vk.Integer, draw_count::Vk.Integer, stride::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_draw_mesh_tasks_indirect_count_nv(command_buffer, buffer, offset::Vk.Integer, count_buffer, count_buffer_offset::Vk.Integer, max_draw_count::Vk.Integer, stride::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_bind_invocation_mask_huawei(command_buffer, image_layout::Vk.ImageLayout, fptr::Vk.FunctionPtr; image_view = C_NULL)
@snoopdef cmd_copy_acceleration_structure_nv(command_buffer, dst, src, mode::Vk.CopyAccelerationStructureModeKHR, fptr::Vk.FunctionPtr)
@snoopdef cmd_copy_acceleration_structure_khr(command_buffer, info::Vk.CopyAccelerationStructureInfoKHR, fptr::Vk.FunctionPtr)
@snoopdef cmd_copy_acceleration_structure_to_memory_khr(command_buffer, info::Vk.CopyAccelerationStructureToMemoryInfoKHR, fptr::Vk.FunctionPtr)
@snoopdef cmd_copy_memory_to_acceleration_structure_khr(command_buffer, info::Vk.CopyMemoryToAccelerationStructureInfoKHR, fptr::Vk.FunctionPtr)
@snoopdef cmd_write_acceleration_structures_properties_khr(command_buffer, acceleration_structures::Vk.AbstractArray, query_type::Vk.QueryType, query_pool, first_query::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_write_acceleration_structures_properties_nv(command_buffer, acceleration_structures::Vk.AbstractArray, query_type::Vk.QueryType, query_pool, first_query::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_build_acceleration_structure_nv(command_buffer, info::Vk.AccelerationStructureInfoNV, instance_offset::Vk.Integer, update::Vk.Bool, dst, scratch, scratch_offset::Vk.Integer, fptr::Vk.FunctionPtr; instance_data = C_NULL, src = C_NULL)
@snoopdef cmd_trace_rays_khr(command_buffer, raygen_shader_binding_table::Vk.StridedDeviceAddressRegionKHR, miss_shader_binding_table::Vk.StridedDeviceAddressRegionKHR, hit_shader_binding_table::Vk.StridedDeviceAddressRegionKHR, callable_shader_binding_table::Vk.StridedDeviceAddressRegionKHR, width::Vk.Integer, height::Vk.Integer, depth::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_trace_rays_nv(command_buffer, raygen_shader_binding_table_buffer, raygen_shader_binding_offset::Vk.Integer, miss_shader_binding_offset::Vk.Integer, miss_shader_binding_stride::Vk.Integer, hit_shader_binding_offset::Vk.Integer, hit_shader_binding_stride::Vk.Integer, callable_shader_binding_offset::Vk.Integer, callable_shader_binding_stride::Vk.Integer, width::Vk.Integer, height::Vk.Integer, depth::Vk.Integer, fptr::Vk.FunctionPtr; miss_shader_binding_table_buffer = C_NULL, hit_shader_binding_table_buffer = C_NULL, callable_shader_binding_table_buffer = C_NULL)
@snoopdef cmd_trace_rays_indirect_khr(command_buffer, raygen_shader_binding_table::Vk.StridedDeviceAddressRegionKHR, miss_shader_binding_table::Vk.StridedDeviceAddressRegionKHR, hit_shader_binding_table::Vk.StridedDeviceAddressRegionKHR, callable_shader_binding_table::Vk.StridedDeviceAddressRegionKHR, indirect_device_address::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_ray_tracing_pipeline_stack_size_khr(command_buffer, pipeline_stack_size::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_performance_marker_intel(command_buffer, marker_info::Vk.PerformanceMarkerInfoINTEL, fptr::Vk.FunctionPtr)::Vk.ResultTypes.Result{Result, VulkanError}
@snoopdef cmd_set_performance_stream_marker_intel(command_buffer, marker_info::Vk.PerformanceStreamMarkerInfoINTEL, fptr::Vk.FunctionPtr)::Vk.ResultTypes.Result{Result, VulkanError}
@snoopdef cmd_set_performance_override_intel(command_buffer, override_info::Vk.PerformanceOverrideInfoINTEL, fptr::Vk.FunctionPtr)::Vk.ResultTypes.Result{Result, VulkanError}
@snoopdef cmd_set_line_stipple_ext(command_buffer, line_stipple_factor::Vk.Integer, line_stipple_pattern::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_build_acceleration_structures_khr(command_buffer, infos::Vk.AbstractArray, build_range_infos::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_build_acceleration_structures_indirect_khr(command_buffer, infos::Vk.AbstractArray, indirect_device_addresses::Vk.AbstractArray, indirect_strides::Vk.AbstractArray, max_primitive_counts::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_cull_mode(command_buffer, fptr::Vk.FunctionPtr; cull_mode = 0)
@snoopdef cmd_set_front_face(command_buffer, front_face::Vk.FrontFace, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_primitive_topology(command_buffer, primitive_topology::Vk.PrimitiveTopology, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_viewport_with_count(command_buffer, viewports::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_scissor_with_count(command_buffer, scissors::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_bind_vertex_buffers_2(command_buffer, buffers::Vk.AbstractArray, offsets::Vk.AbstractArray, fptr::Vk.FunctionPtr; sizes = C_NULL, strides = C_NULL)
@snoopdef cmd_set_depth_test_enable(command_buffer, depth_test_enable::Vk.Bool, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_depth_write_enable(command_buffer, depth_write_enable::Vk.Bool, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_depth_compare_op(command_buffer, depth_compare_op::Vk.CompareOp, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_depth_bounds_test_enable(command_buffer, depth_bounds_test_enable::Vk.Bool, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_stencil_test_enable(command_buffer, stencil_test_enable::Vk.Bool, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_stencil_op(command_buffer, face_mask::Vk.StencilFaceFlag, fail_op::Vk.StencilOp, pass_op::Vk.StencilOp, depth_fail_op::Vk.StencilOp, compare_op::Vk.CompareOp, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_patch_control_points_ext(command_buffer, patch_control_points::Vk.Integer, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_rasterizer_discard_enable(command_buffer, rasterizer_discard_enable::Vk.Bool, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_depth_bias_enable(command_buffer, depth_bias_enable::Vk.Bool, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_logic_op_ext(command_buffer, logic_op::Vk.LogicOp, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_primitive_restart_enable(command_buffer, primitive_restart_enable::Vk.Bool, fptr::Vk.FunctionPtr)
@snoopdef cmd_copy_buffer_2(command_buffer, copy_buffer_info::Vk.CopyBufferInfo2, fptr::Vk.FunctionPtr)
@snoopdef cmd_copy_image_2(command_buffer, copy_image_info::Vk.CopyImageInfo2, fptr::Vk.FunctionPtr)
@snoopdef cmd_blit_image_2(command_buffer, blit_image_info::Vk.BlitImageInfo2, fptr::Vk.FunctionPtr)
@snoopdef cmd_copy_buffer_to_image_2(command_buffer, copy_buffer_to_image_info::Vk.CopyBufferToImageInfo2, fptr::Vk.FunctionPtr)
@snoopdef cmd_copy_image_to_buffer_2(command_buffer, copy_image_to_buffer_info::Vk.CopyImageToBufferInfo2, fptr::Vk.FunctionPtr)
@snoopdef cmd_resolve_image_2(command_buffer, resolve_image_info::Vk.ResolveImageInfo2, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_fragment_shading_rate_khr(command_buffer, fragment_size::Vk.Extent2D, combiner_ops::Vk.NTuple{2, Vk.FragmentShadingRateCombinerOpKHR}, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_fragment_shading_rate_enum_nv(command_buffer, shading_rate::Vk.FragmentShadingRateNV, combiner_ops::Vk.NTuple{2, Vk.FragmentShadingRateCombinerOpKHR}, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_vertex_input_ext(command_buffer, vertex_binding_descriptions::Vk.AbstractArray, vertex_attribute_descriptions::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_color_write_enable_ext(command_buffer, color_write_enables::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_set_event_2(command_buffer, event, dependency_info::Vk.DependencyInfo, fptr::Vk.FunctionPtr)
@snoopdef cmd_reset_event_2(command_buffer, event, fptr::Vk.FunctionPtr; stage_mask = 0)
@snoopdef cmd_wait_events_2(command_buffer, events::Vk.AbstractArray, dependency_infos::Vk.AbstractArray, fptr::Vk.FunctionPtr)
@snoopdef cmd_pipeline_barrier_2(command_buffer, dependency_info::Vk.DependencyInfo, fptr::Vk.FunctionPtr)
@snoopdef cmd_write_timestamp_2(command_buffer, query_pool, query::Vk.Integer, fptr::Vk.FunctionPtr; stage = 0)
@snoopdef cmd_write_buffer_marker_2_amd(command_buffer, dst_buffer, dst_offset::Vk.Integer, marker::Vk.Integer, fptr::Vk.FunctionPtr; stage = 0)
@snoopdef cmd_cu_launch_kernel_nvx(command_buffer, launch_info::Vk.CuLaunchInfoNVX, fptr::Vk.FunctionPtr)
@snoopdef cmd_begin_rendering(command_buffer, rendering_info::Vk.RenderingInfo, fptr::Vk.FunctionPtr)
@snoopdef cmd_end_rendering(command_buffer, fptr::Vk.FunctionPtr)
